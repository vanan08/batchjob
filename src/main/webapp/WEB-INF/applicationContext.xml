<!--

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.0.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
	">
-->
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:security="http://www.springframework.org/schema/security" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.2.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd 
	">

	<bean id="pgsDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
      <property name="jndiName" value="java:jboss/datasources/KeycloakDS"/>
    </bean>
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		 <property name="dataSource" ref="pgsDataSource"/>
		<property name="hibernateProperties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">create</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.generate_statistics">true</prop>
            </props>
        </property>
        <property name="mappingResources">
			<list>
				<value>hbm.xml</value>
			</list>
		</property>
	</bean>
	
	
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	
	<bean id="synDB" class="com.mkyong.service.impl.SynDBImpl" >
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<context:component-scan base-package="com.mkyong.quartz"/>
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!-- Spring Quartz Scheduler job -->
	<bean name="schedulerJob" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass" value="com.mkyong.quartz.SchedulerJob"  />
		<property name="jobDataAsMap">
	        <map>
	            <entry key="synDB" value-ref="synDB" />
	        </map>
	    </property>
	</bean>

	<!-- Cron Trigger, run every 10 seconds -->
	<bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="schedulerJob" />
		<property name="cronExpression" value="0/5 * * * * ?" />
	</bean>



	<!-- Scheduler -->
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="jobDetails">
			<list>
				<ref bean="schedulerJob" />
			</list>
		</property>

		<property name="triggers">
			<list>
				<ref bean="cronTrigger" />
			</list>
		</property>
		
		
		<!-- force to update QRTZ_CRON_TRIGGERS table every time restart the node-->
		<property name="overwriteExistingJobs" value="true"/>
		
		<property name="quartzProperties">
            <props>
<!--               <prop key="org.quartz.scheduler.instanceName">MyClusteredScheduler</prop> -->
<!--               <prop key="org.quartz.scheduler.instanceId">AUTO</prop> -->
              <prop key="org.quartz.jobStore.class">org.quartz.impl.jdbcjobstore.JobStoreTX</prop> 
              <prop key="org.quartz.jobStore.driverDelegateClass">org.quartz.impl.jdbcjobstore.PostgreSQLDelegate</prop> 
              <prop key="org.quartz.jobStore.useProperties">false</prop>
              <prop key="org.quartz.jobStore.tablePrefix">QRTZ_</prop>
              <prop key="org.quartz.jobStore.clusterCheckinInterval">10000</prop>
              <prop key="org.quartz.jobStore.isClustered">true</prop>
            </props>
        </property>
		<property name="dataSource" ref="pgsDataSource"/> 
	</bean>
	
</beans>